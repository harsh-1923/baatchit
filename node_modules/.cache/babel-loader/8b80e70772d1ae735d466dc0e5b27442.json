{"ast":null,"code":"var _jsxFileName = \"/Users/harsh_ju/Documents/Projects/Final Bulds/baatchit/src/pages/ChatPage/ChatPage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./chatpage.css\";\nimport { db, auth, storage } from \"../../firebase\"; // import User from \"../components/User\";\n// import Messages from \"../components/Messages\";\n// import Message from \"../components/Message\";\n\nimport { collection, query, where, onSnapshot, addDoc, Timestamp, orderBy } from \"firebase/firestore\";\nimport { ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatPage = _ref => {\n  let {\n    dark\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hey\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n}; // const ChatPage = ({ dark }) => {\n//   // variables \n//   const [users, setUsers] = useState([]);\n//   const [chat, setChat] = useState();\n//   const [text, setText] = useState(\"\");\n//   const [img, setImg] = useState(\"\");\n//   const [msgs, setMsgs] = useState([]);\n//   const user1 = auth.currentUser.uid;\n//   //renderer\n//   useEffect(() => {\n//     const userRef = collection(db, \"users\");\n//     const q = query(userRef, where(\"uid\", \"not-in\", [user1]));\n//     //\n//     const unsub = onSnapshot(q, (querySnapshot) => {\n//       let users = [];\n//       querySnapshot.forEach((doc) => {\n//         users.push(doc.data());\n//       });\n//       setUsers(users);\n//     });\n//     return () => unsub();\n//   }, []);\n//   //Select User\n//   const selectUser = (user) => {\n//     setChat(user);\n//     // console.log(user);\n//     const user2 = user.uid; //selected user\n//     const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\n//     const msgRef = collection(db, \"messages\", id, \"chat\");\n//     const q = query(msgRef, orderBy(\"createdAt\", \"asc\"));\n//     onSnapshot(q, querySnapshot => {\n//       let msgs = [];\n//       querySnapshot.forEach(doc => {\n//         msgs.push(doc.data());\n//       });\n//       setMsgs(msgs);\n//     });\n//   };\n//   // Handle Submit\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const user2 = chat.uid;\n//     const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\n//     let url;\n//     if (img) {\n//       const imgRef = ref(\n//         storage,\n//         `images/${new Date().getTime()} - ${img.name}`\n//       );\n//       const snap = await uploadBytes(imgRef, img);\n//       const dlUrl = await getDownloadURL(ref(storage, snap.ref.fullPath));\n//       url = dlUrl;\n//     }\n//     await addDoc(collection(db, \"messages\", id, \"chat\"), {\n//       text,\n//       from: user1,\n//       to: user2,\n//       createdAt: Timestamp.fromDate(new Date()),\n//       media: url || \"\",\n//     });\n//     setText(\"\");\n//   };\n//   //color scheme set\n//   const backgroundColor = dark ? \"#121212\" : \"#F2EEEE\";\n//   const primary = dark ? \"white\" : \"black\";\n//   return (\n//     <div\n//       className=\"chatpage-wrapper\"\n//       style={{ backgroundColor: backgroundColor }}\n//     >\n//       <div className=\"user-wrapper\">\n//         <div>\n//           <h2 className=\"user-title\">Messages</h2>\n//         </div>\n//       </div>\n//       <div className=\"chat-wrapper\">\n//       <div>\n//           <h2 className=\"chat-title\">Select a user to start a conversation</h2>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n\n_c = ChatPage;\nexport default ChatPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"sources":["/Users/harsh_ju/Documents/Projects/Final Bulds/baatchit/src/pages/ChatPage/ChatPage.js"],"names":["React","useEffect","useState","db","auth","storage","collection","query","where","onSnapshot","addDoc","Timestamp","orderBy","ref","getDownloadURL","uploadBytes","ChatPage","dark"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,gBAAP;AACA,SAASC,EAAT,EAAaC,IAAb,EAAmBC,OAAnB,QAAkC,gBAAlC,C,CACA;AACA;AACA;;AACA,SACEC,UADF,EAEEC,KAFF,EAGEC,KAHF,EAIEC,UAJF,EAKEC,MALF,EAMEC,SANF,EAOEC,OAPF,QAQO,oBARP;AASA,SAASC,GAAT,EAAcC,cAAd,EAA8BC,WAA9B,QAAiD,kBAAjD;;;AAGA,MAAMC,QAAQ,GAAG,QAAY;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AAC3B,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD,CAJD,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KApGMD,Q;AAsGN,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport \"./chatpage.css\";\nimport { db, auth, storage } from \"../../firebase\";\n// import User from \"../components/User\";\n// import Messages from \"../components/Messages\";\n// import Message from \"../components/Message\";\nimport {\n  collection,\n  query,\n  where,\n  onSnapshot,\n  addDoc,\n  Timestamp,\n  orderBy,\n} from \"firebase/firestore\";\nimport { ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\n\n\nconst ChatPage = ({dark}) => {\n  return <div>\n    hey\n  </div>\n}\n\n// const ChatPage = ({ dark }) => {\n//   // variables \n//   const [users, setUsers] = useState([]);\n//   const [chat, setChat] = useState();\n//   const [text, setText] = useState(\"\");\n//   const [img, setImg] = useState(\"\");\n//   const [msgs, setMsgs] = useState([]);\n\n\n//   const user1 = auth.currentUser.uid;\n\n//   //renderer\n//   useEffect(() => {\n//     const userRef = collection(db, \"users\");\n//     const q = query(userRef, where(\"uid\", \"not-in\", [user1]));\n//     //\n//     const unsub = onSnapshot(q, (querySnapshot) => {\n//       let users = [];\n//       querySnapshot.forEach((doc) => {\n//         users.push(doc.data());\n//       });\n//       setUsers(users);\n//     });\n//     return () => unsub();\n//   }, []);\n\n//   //Select User\n\n//   const selectUser = (user) => {\n//     setChat(user);\n//     // console.log(user);\n    \n//     const user2 = user.uid; //selected user\n//     const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\n\n//     const msgRef = collection(db, \"messages\", id, \"chat\");\n//     const q = query(msgRef, orderBy(\"createdAt\", \"asc\"));\n\n//     onSnapshot(q, querySnapshot => {\n//       let msgs = [];\n//       querySnapshot.forEach(doc => {\n//         msgs.push(doc.data());\n//       });\n//       setMsgs(msgs);\n//     });\n//   };\n  \n//   // Handle Submit\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const user2 = chat.uid;\n//     const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\n\n//     let url;\n//     if (img) {\n//       const imgRef = ref(\n//         storage,\n//         `images/${new Date().getTime()} - ${img.name}`\n//       );\n//       const snap = await uploadBytes(imgRef, img);\n//       const dlUrl = await getDownloadURL(ref(storage, snap.ref.fullPath));\n//       url = dlUrl;\n//     }\n\n//     await addDoc(collection(db, \"messages\", id, \"chat\"), {\n//       text,\n//       from: user1,\n//       to: user2,\n//       createdAt: Timestamp.fromDate(new Date()),\n//       media: url || \"\",\n//     });\n//     setText(\"\");\n//   };\n\n//   //color scheme set\n//   const backgroundColor = dark ? \"#121212\" : \"#F2EEEE\";\n//   const primary = dark ? \"white\" : \"black\";\n//   return (\n//     <div\n//       className=\"chatpage-wrapper\"\n//       style={{ backgroundColor: backgroundColor }}\n//     >\n//       <div className=\"user-wrapper\">\n//         <div>\n//           <h2 className=\"user-title\">Messages</h2>\n//         </div>\n//       </div>\n//       <div className=\"chat-wrapper\">\n//       <div>\n//           <h2 className=\"chat-title\">Select a user to start a conversation</h2>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\nexport default ChatPage;\n"]},"metadata":{},"sourceType":"module"}