{"ast":null,"code":"var _jsxFileName = \"/Users/harsh_ju/Documents/Projects/Final Bulds/baatchit/src/pages/ChatPage/ChatPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./chatpage.css\";\nimport { db, auth, storage } from \"../../firebase\";\nimport UserBadge from \"../../components/UserBadge/UserBadge\";\nimport Chat from \"../../components/Chat/Chat\";\nimport Message from \"../../components/Message/Message\";\nimport Messages from \"../../components/Messages/Messages\";\nimport { collection, query, where, onSnapshot, addDoc, Timestamp, orderBy } from \"firebase/firestore\";\nimport { ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatPage = _ref => {\n  _s();\n\n  let {\n    dark\n  } = _ref;\n  const [users, setUsers] = useState([]);\n  const [chat, setChat] = useState();\n  const [text, setText] = useState(\"\");\n  const [img, setImg] = useState(\"\");\n  const [msgs, setMsgs] = useState([]);\n  const user1 = auth.currentUser.uid;\n  console.log(user1);\n  useEffect(() => {\n    const userRef = collection(db, \"users\");\n    const q = query(userRef, where(\"uid\", \"not-in\", [user1])); //\n\n    const unsub = onSnapshot(q, querySnapshot => {\n      let users = [];\n      querySnapshot.forEach(doc => {\n        users.push(doc.data());\n      });\n      setUsers(users);\n    });\n    return () => unsub();\n  }, []); // console.log(users);\n\n  const selectUser = user => {\n    setChat(user);\n    console.log(chat);\n    const user2 = user.uid; //selected user\n\n    const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\n    const msgRef = collection(db, \"messages\", id, \"chat\");\n    const q = query(msgRef, orderBy(\"createdAt\", \"asc\"));\n    onSnapshot(q, querySnapshot => {\n      let msgs = [];\n      querySnapshot.forEach(doc => {\n        msgs.push(doc.data());\n      });\n      setMsgs(msgs);\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const user2 = chat.uid;\n    const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\n    let url;\n\n    if (img) {\n      const imgRef = ref(storage, `images/${new Date().getTime()} - ${img.name}`);\n      const snap = await uploadBytes(imgRef, img);\n      const dlUrl = await getDownloadURL(ref(storage, snap.ref.fullPath));\n      url = dlUrl;\n    }\n\n    await addDoc(collection(db, \"messages\", id, \"chat\"), {\n      text,\n      from: user1,\n      to: user2,\n      createdAt: Timestamp.fromDate(new Date()),\n      media: url || \"\"\n    });\n    setText(\"\");\n  };\n\n  const statusColor = chat ? chat.isOnline ? \"green\" : \"red\" : \"red\"; //color scheme set\n\n  const backgroundColor = dark ? \"#121212\" : \"#F2EEEE\";\n  const primary = dark ? \"white\" : \"black\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page-wrapper\",\n    style: {\n      backgroundColor: backgroundColor\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-list-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-names\",\n        children: users.map(user => {\n          // console.log(user.name);\n          return /*#__PURE__*/_jsxDEV(UserBadge, {\n            user: user,\n            selectUser: selectUser\n          }, user.uid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: chat ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: chat.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-indicator\",\n            style: {\n              backgroundColor: statusColor\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), msgs.length ? msgs.map((msg, i) => /*#__PURE__*/_jsxDEV(Message, {\n          msgs: msg\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this)) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msg-form\",\n          children: /*#__PURE__*/_jsxDEV(Messages, {\n            handleSubmit: handleSubmit,\n            text: text,\n            setText: setText,\n            setImg: setImg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatPage, \"T4w1zcPsNaGojAYgF2bOHBfH3lQ=\");\n\n_c = ChatPage;\nexport default ChatPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"sources":["/Users/harsh_ju/Documents/Projects/Final Bulds/baatchit/src/pages/ChatPage/ChatPage.js"],"names":["React","useEffect","useState","db","auth","storage","UserBadge","Chat","Message","Messages","collection","query","where","onSnapshot","addDoc","Timestamp","orderBy","ref","getDownloadURL","uploadBytes","ChatPage","dark","users","setUsers","chat","setChat","text","setText","img","setImg","msgs","setMsgs","user1","currentUser","uid","console","log","userRef","q","unsub","querySnapshot","forEach","doc","push","data","selectUser","user","user2","id","msgRef","handleSubmit","e","preventDefault","url","imgRef","Date","getTime","name","snap","dlUrl","fullPath","from","to","createdAt","fromDate","media","statusColor","isOnline","backgroundColor","primary","map","length","msg","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./chatpage.css\";\nimport { db, auth, storage } from \"../../firebase\";\nimport UserBadge from \"../../components/UserBadge/UserBadge\";\nimport Chat from \"../../components/Chat/Chat\";\nimport Message from \"../../components/Message/Message\";\nimport Messages from \"../../components/Messages/Messages\";\n\nimport {\n  collection,\n  query,\n  where,\n  onSnapshot,\n  addDoc,\n  Timestamp,\n  orderBy,\n} from \"firebase/firestore\";\nimport { ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\n\nconst ChatPage = ({ dark }) => {\n  const [users, setUsers] = useState([]);\n  const [chat, setChat] = useState();\n  const [text, setText] = useState(\"\");\n  const [img, setImg] = useState(\"\");\n  const [msgs, setMsgs] = useState([]);\n\n  const user1 = auth.currentUser.uid;\n  console.log(user1);\n  useEffect(() => {\n    const userRef = collection(db, \"users\");\n    const q = query(userRef, where(\"uid\", \"not-in\", [user1]));\n    //\n    const unsub = onSnapshot(q, (querySnapshot) => {\n      let users = [];\n      querySnapshot.forEach((doc) => {\n        users.push(doc.data());\n      });\n      setUsers(users);\n    });\n    return () => unsub();\n  }, []);\n  // console.log(users);\n\n  const selectUser = (user) => {\n    setChat(user);\n    console.log(chat);\n\n    const user2 = user.uid; //selected user\n    const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\n\n    const msgRef = collection(db, \"messages\", id, \"chat\");\n    const q = query(msgRef, orderBy(\"createdAt\", \"asc\"));\n\n    onSnapshot(q, (querySnapshot) => {\n      let msgs = [];\n      querySnapshot.forEach((doc) => {\n        msgs.push(doc.data());\n      });\n      setMsgs(msgs);\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const user2 = chat.uid;\n    const id = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\n\n    let url;\n    if (img) {\n      const imgRef = ref(\n        storage,\n        `images/${new Date().getTime()} - ${img.name}`\n      );\n      const snap = await uploadBytes(imgRef, img);\n      const dlUrl = await getDownloadURL(ref(storage, snap.ref.fullPath));\n      url = dlUrl;\n    }\n\n    await addDoc(collection(db, \"messages\", id, \"chat\"), {\n      text,\n      from: user1,\n      to: user2,\n      createdAt: Timestamp.fromDate(new Date()),\n      media: url || \"\",\n    });\n    setText(\"\");\n  };\n\n  const statusColor = chat ? (chat.isOnline ? \"green\" : \"red\") : \"red\";\n\n  //color scheme set\n  const backgroundColor = dark ? \"#121212\" : \"#F2EEEE\";\n  const primary = dark ? \"white\" : \"black\";\n  return (\n    <div\n      className=\"chat-page-wrapper\"\n      style={{ backgroundColor: backgroundColor }}\n    >\n      <div className=\"user-list-wrapper\">\n        <div className=\"user-list-title\">\n          <h2>Messages</h2>\n        </div>\n        <div className=\"user-names\">\n          {users.map((user) => {\n            // console.log(user.name);\n            return (\n              <UserBadge key={user.uid} user={user} selectUser={selectUser} />\n            );\n          })}\n        </div>\n      </div>\n      <div className=\"chat\">\n        {chat ? (\n          <div className=\"chat-wrapper\">\n            <div className=\"chat-title\">\n              <h2>{chat.name}</h2>\n              <div\n                className=\"status-indicator\"\n                style={{ backgroundColor: statusColor }}\n              ></div>\n            </div>\n            { msgs.length ? msgs.map((msg, i) => (\n              <Message key={i} msgs={msg} />\n            )) : null}\n            <div className=\"msg-form\">\n              <Messages handleSubmit={handleSubmit} text={text} setText={setText} setImg={setImg}/>\n            </div>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatPage;\n"]},"metadata":{},"sourceType":"module"}